name: Deploy to Beta Environment

on:
  push:
    branches: [ develop, feature/*, hotfix/* ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  WORKING_DIRECTORY: ./Kiddo_Quest

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: '${{ env.WORKING_DIRECTORY }}/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Run minimal E2E tests
      run: npm run test:e2e:minimal
      
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          ${{ env.WORKING_DIRECTORY }}/coverage
          ${{ env.WORKING_DIRECTORY }}/test-results

  build:
    name: Build Beta
    runs-on: ubuntu-latest
    needs: test
    
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js  
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: '${{ env.WORKING_DIRECTORY }}/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Copy beta environment file
      run: cp .env.beta .env
    
    - name: Build for beta
      run: npm run build
      env:
        CI: false  # Treat warnings as warnings, not errors
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: beta-build
        path: ${{ env.WORKING_DIRECTORY }}/build

  deploy-beta:
    name: Deploy to Beta Firebase
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref != 'refs/heads/main'  # Don't deploy beta from main branch
    
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    environment:
      name: beta
      url: https://kiddo-quest-beta.web.app
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: beta-build
        path: ${{ env.WORKING_DIRECTORY }}/build
    
    - name: Deploy to Firebase Beta
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_BETA }}'
        projectId: kiddo-quest-beta
        channelId: live
        entryPoint: ${{ env.WORKING_DIRECTORY }}
    
    - name: Post deployment tests
      run: |
        echo "üß™ Running post-deployment validation..."
        curl -f https://kiddo-quest-beta.web.app || exit 1
        echo "‚úÖ Beta deployment successful!"

  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: [deploy-beta]
    if: always()
    
    steps:
    - name: Notify success
      if: needs.deploy-beta.result == 'success'
      run: |
        echo "‚úÖ Beta deployment successful!"
        echo "üåê Beta URL: https://kiddo-quest-beta.web.app"
    
    - name: Notify failure  
      if: needs.deploy-beta.result == 'failure'
      run: |
        echo "‚ùå Beta deployment failed!"
        exit 1