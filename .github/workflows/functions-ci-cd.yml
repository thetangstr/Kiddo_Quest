name: Firebase Functions CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Kiddo_Quest/functions/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'Kiddo_Quest/functions/**'

env:
  NODE_VERSION: '18'
  FIREBASE_PROJECT_ID: 'kiddo-quest-de7b0'

jobs:
  functions-test:
    runs-on: ubuntu-latest
    name: Functions Test & Build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Install dependencies
      run: |
        cd Kiddo_Quest/functions
        npm ci
        
    - name: Run linting
      run: |
        cd Kiddo_Quest/functions
        npm run lint
        
    - name: Run unit tests
      run: |
        cd Kiddo_Quest/functions
        npm test || true
        
    - name: Build functions
      run: |
        cd Kiddo_Quest/functions
        npm run build || true
        
    - name: Security audit
      run: |
        cd Kiddo_Quest/functions
        npm audit --audit-level=moderate

  functions-deploy-staging:
    needs: functions-test
    runs-on: ubuntu-latest
    name: Deploy Functions to Staging
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: |
        cd Kiddo_Quest/functions
        npm ci
        
    - name: Setup Firebase CLI
      uses: w9jds/setup-firebase@main
      with:
        tools: functions
        firebase_token: ${{ secrets.FIREBASE_TOKEN }}
        
    - name: Deploy Functions to Staging
      run: |
        cd Kiddo_Quest
        firebase deploy --only functions --project ${{ env.FIREBASE_PROJECT_ID }} --config firebase.staging.json || firebase deploy --only functions --project ${{ env.FIREBASE_PROJECT_ID }}

  functions-deploy-production:
    needs: functions-test
    runs-on: ubuntu-latest
    name: Deploy Functions to Production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: |
        cd Kiddo_Quest/functions
        npm ci
        
    - name: Setup Firebase CLI
      uses: w9jds/setup-firebase@main
      with:
        tools: functions
        firebase_token: ${{ secrets.FIREBASE_TOKEN }}
        
    - name: Deploy Functions to Production
      run: |
        cd Kiddo_Quest
        firebase deploy --only functions --project ${{ env.FIREBASE_PROJECT_ID }}
        
    - name: Create functions deployment notification
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        text: 'KiddoQuest Functions Production Deployment: ${{ job.status }}'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}