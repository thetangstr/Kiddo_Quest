name: Mobile CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'KiddoQuest_mobile/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'KiddoQuest_mobile/**'

env:
  NODE_VERSION: '20'
  EAS_CLI_VERSION: 'latest'

jobs:
  mobile-test:
    runs-on: ubuntu-latest
    name: Mobile Test & Build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Install dependencies
      run: |
        cd KiddoQuest_mobile
        npm install
        
    - name: Run TypeScript check
      run: |
        cd KiddoQuest_mobile
        npx tsc --noEmit
        
    - name: Run linting
      run: |
        cd KiddoQuest_mobile
        npm run lint || true
        
    - name: Run unit tests
      run: |
        cd KiddoQuest_mobile
        npm test -- --coverage --watchAll=false || true
        
    - name: Setup Expo CLI
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
        
    - name: Build mobile app (development)
      run: |
        cd KiddoQuest_mobile
        npx expo export --platform web
        
    - name: Upload mobile build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mobile-build-files
        path: KiddoQuest_mobile/dist/
        retention-days: 7

  mobile-e2e-test:
    needs: mobile-test
    runs-on: ubuntu-latest
    name: Mobile E2E Testing
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: |
        cd KiddoQuest_mobile
        npm install
        
    - name: Install Playwright browsers
      run: |
        cd KiddoQuest_mobile
        npx playwright install --with-deps
        
    - name: Run mobile E2E tests
      run: |
        cd KiddoQuest_mobile
        npm run test:e2e || true
        
    - name: Upload mobile test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-e2e-test-results
        path: |
          KiddoQuest_mobile/test-results/
          KiddoQuest_mobile/playwright-report/
        retention-days: 30

  mobile-build-staging:
    needs: [mobile-test, mobile-e2e-test]
    runs-on: ubuntu-latest
    name: Build Mobile App (Staging)
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: |
        cd KiddoQuest_mobile
        npm install
        
    - name: Setup Expo CLI
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
        
    - name: Build for staging (development profile)
      run: |
        cd KiddoQuest_mobile
        npx eas build --platform all --profile development --non-interactive
        
    - name: Upload build info
      uses: actions/upload-artifact@v4
      with:
        name: mobile-staging-build-info
        path: KiddoQuest_mobile/build-info.json
        retention-days: 30

  mobile-build-production:
    needs: [mobile-test, mobile-e2e-test]
    runs-on: ubuntu-latest
    name: Build Mobile App (Production)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: |
        cd KiddoQuest_mobile
        npm install
        
    - name: Setup Expo CLI
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
        
    - name: Build for production
      run: |
        cd KiddoQuest_mobile
        npx eas build --platform all --profile production --non-interactive
        
    - name: Submit to app stores (manual approval required)
      run: |
        cd KiddoQuest_mobile
        echo "Production build completed. Manual submission to app stores required."
        # npx eas submit --platform all --latest
        
    - name: Create mobile deployment notification
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        text: 'KiddoQuest Mobile Production Build: ${{ job.status }}'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}